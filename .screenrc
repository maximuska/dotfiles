## Screen configuration file
## Author: maximk

# Set 'escape' key to ^W instead of Ctr-a
escape ^Ww

# Turn off debug log (in case screen was compiled with debug on, as I did)
debug off

# Bind Alt-Left/Right to switch buffers in the current window
bindkey -d "\033\033OD" prev
bindkey -d "\033\033OC" next

# Ditto with F1/F2
bindkey -k k1 prev
bindkey -k k2 next

# Bind command mode to F11, and exit to F12
bindkey -k F1 colon # F11
bindkey -k F2 quit  # F12
#bindkey -d "`" command # An additional escape key

# Scroll up Alt+Up to initiate scrolling mode, and then [Alt] Pg+Up/Pg+Down to scroll through.
# Bind 'Enter' to exit scrolling mode instead of starting a selection.
# Bind 'Home' to move cursor to the beginning of the line (instead of beginning of the scroll buffer).
bindkey -d "[5~" eval copy "stuff 5\025"
bindkey -m "[5~" stuff "5\025"
bindkey -d "[6~" eval copy "stuff 5\004"
bindkey -m "[6~" stuff "5\004"
markkeys "^C=^M"                          # Bind 'Enter' to Ctr-C in selection mode
bindkey -m -k kh stuff "^A"               # Home
bindkey -m -k kH eval "stuff $" "stuff l" # End

# Reduce timeout to not collide with Esc + movement sequences common to e.g., VI.
maptimeout 50

# Remember windows layout (e.g., split) on terminal reattachments
layout new
layout autosave on

# Switch regions on mouse clicks (collides with mouse selection..)
#mousetrack on

# Support "alternate screen" in terminals, as xterm does (e.g., restores screen when less exits)
altscreen on

# Messages timeouts
msgminwait 0 # Time to show messages when some activity happens
msgwait 1    # Time to show a message when window input is idle

# Resizing active window
#bind = resize =
#bind + resize +1
#bind - resize -1
#bind _ resize max

startup_message off
vbell on

#Scrolling in xterm
#termcapinfo xterm* ti@:te@

# geometry
#height 240
#width 120
defscrollback 10000

# status line
hardstatus lastline "%{= dd}--< %{= dm}%H%{= dd} >--< %{= dg}%c%{ dd} >-- ( %-w%{= BW}%n %t%{-}%+w )%="
#hardstatus lastline '%{= kG}[%{G}%H%{g}][%= %{= kw}%?%-Lw%?%{r} (%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'
#caption always # activates window caption
#caption string '%{= wk}[%{k}%H%{k}][%= %{= wk}%?%-Lw%?%{r}(%{r}%n*%f%t%?(%u)%?%{r})%{k}%?%+Lw%?%?%= %{k}][%{b} %d/%m %{k}%c %{k}]' # good looking window bar

screen -t dummy 0 echo
screen -t tab1 1 # Create windows with the specified titles (can be overriden by programs executed..)
screen -t tab2 2
screen -t tab3 3
select 1 # Start with window #1 selected
